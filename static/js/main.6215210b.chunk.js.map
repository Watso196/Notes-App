{"version":3,"sources":["Components/Header.js","delete.svg","Components/ListItem.js","Components/ListContainer.js","Components/NewItemForm.js","Components/App.js","serviceWorker.js","index.js"],"names":["Header","handleTextChange","bind","input","React","createRef","event","target","value","this","current","type","placeholder","onChange","ref","Component","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","width","height","viewBox","fill","ForwardRef","forwardRef","ListItem","handleChangeCheckedState","setState","prevState","isChecked","state","textInput","checkbox","id","deleteListItem","className","checked","name","defaultValue","aria-label","onClick","ListContainer","changeCheckedState","listItems","map","listItem","index","NewItemForm","handleChangeValue","handleSubmit","addListItem","preventDefault","onSubmit","App","prevListItemId","handleAddListItem","handleDeleteListItem","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6215210b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.input = React.createRef();\n  }\n\n  handleTextChange(event) {\n    event.target.value = this.input.current.value;\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>\n          <input\n            type=\"text\"\n            placeholder=\"Your List Title...\"\n            onChange={this.handleTextChange}\n            ref={this.input}\n          />\n        </h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4.151 17.943l-4.143-4.102-4.117 4.159-1.833-1.833 4.104-4.157-4.162-4.119 1.833-1.833 4.155 4.102 4.106-4.16 1.849 1.849-4.1 4.141 4.157 4.104-1.849 1.849z\"\n});\n\nvar SvgDelete = function SvgDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"#333\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/delete.267ddbbe.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ReactComponent as DeleteIcon } from \"../delete.svg\";\n\nclass ListItem extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isChecked: false,\n    };\n\n    this.textInput = React.createRef();\n    this.checkbox = React.createRef();\n  }\n\n  handleChangeCheckedState = () => {\n    this.setState((prevState) => ({ isChecked: !prevState.isChecked }));\n  };\n\n  render() {\n    const { value, id, deleteListItem } = this.props;\n    return (\n      <div className=\"list-item\">\n        <input\n          type=\"checkbox\"\n          ref={this.checkbox}\n          checked={this.state.isChecked}\n          onChange={this.handleChangeCheckedState}\n          name={value}\n        />\n        <li>\n          <textarea\n            type=\"text\"\n            ref={this.textInput}\n            defaultValue={value}\n            className={this.state.isChecked ? \"checked-item\" : null}\n          />\n        </li>\n        <button\n          aria-label={\"Delete \" + value}\n          onClick={() => {\n            deleteListItem(id);\n          }}\n        >\n          <DeleteIcon />\n        </button>\n      </div>\n    );\n  }\n}\n\nListItem.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default ListItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ListItem from \"./ListItem\";\n\nclass ListContainer extends Component {\n  constructor() {\n    super();\n  }\n\n  //iterate over listitems array to create a <ListItem /> for each\n  //\n\n  render() {\n    const { changeCheckedState, deleteListItem } = this.props;\n    return (\n      <div className=\"list-container\">\n        <ul>\n          {this.props.listItems.map((listItem, index) => (\n            <ListItem\n              value={listItem.value}\n              key={listItem.id}\n              id={listItem.id}\n              deleteListItem={deleteListItem}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nListContainer.propTypes = {\n  listItems: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ListContainer;\n","import React, { Component } from \"react\";\n\nclass NewItemForm extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChangeValue = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    this.props.addListItem(this.state.value);\n    event.preventDefault();\n    this.setState({\n      value: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add new list item...\"\n          id=\"add-new\"\n          value={this.state.value}\n          onChange={this.handleChangeValue}\n        />\n      </form>\n    );\n  }\n}\n\nexport default NewItemForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../App.css\";\n\nimport Header from \"./Header\";\nimport ListContainer from \"./ListContainer\";\nimport NewItemForm from \"./NewItemForm\";\n\nclass App extends Component {\n  state = {\n    listItems: [],\n  };\n\n  prevListItemId = 0;\n\n  handleAddListItem = (value) => {\n    this.setState((prevState) => {\n      return {\n        listItems: [\n          ...prevState.listItems,\n          {\n            value,\n            isChecked: false,\n            id: (this.prevListItemId += 1),\n          },\n        ],\n      };\n    });\n  };\n\n  handleDeleteListItem = (id) => {\n    this.setState((prevState) => {\n      return {\n        listItems: prevState.listItems.filter((listItem) => listItem.id !== id),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Header />\n        <ListContainer\n          listItems={this.state.listItems}\n          deleteListItem={this.handleDeleteListItem}\n        />\n        <NewItemForm addListItem={this.handleAddListItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}